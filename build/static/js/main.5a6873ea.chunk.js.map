{"version":3,"sources":["components/Row.js","components/Sort.js","components/Table.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Row","users","map","id","name","occupation","email","scope","Sort","props","sort","a","b","Table","useState","setSort","sortBy","event","target","console","log","className","onClick","type","SearchBar","handleInputChange","onChange","App","employeeDirectory","employees","setEmployees","search","setSearch","useEffect","filtered","filter","employee","includes","results","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAiBeA,MAff,YAAuB,IAATC,EAAQ,EAARA,MACV,OAAO,mCAECA,EAAMC,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,WAAYC,EAAxB,EAAwBA,MAAxB,OACN,+BACI,oBAAIC,MAAM,MAAV,SAAiBJ,IACjB,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,MAJAH,SCKVK,MARf,SAAcC,GAAQ,IACXR,EAAgBQ,EAAhBR,MAAOS,EAASD,EAATC,KAEd,OADAD,EAAMR,MAAMS,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAED,GAAQE,EAAEF,GAAS,GAAK,KAElD,cAAC,EAAD,CAAKT,MAAOA,KCqBLY,MAzBf,YAAyB,IAATZ,EAAQ,EAARA,MAAQ,EACIa,mBAAS,MADb,mBACbJ,EADa,KACPK,EADO,KAGdC,EAAS,SAAAC,GACXF,EAAQE,EAAMC,OAAOf,KAIzB,OAFAgB,QAAQC,IAAI,gBAAkBnB,GAG1B,wBAAOoB,UAAU,QAAjB,UACI,gCACI,+BACI,oBAAId,MAAM,MAAV,SAAgB,wBAAQJ,GAAG,KAAKmB,QAASN,EAAQO,KAAK,SAASF,UAAU,kBAAzD,kBAChB,oBAAId,MAAM,MAAV,SAAgB,wBAAQJ,GAAG,OAAOmB,QAASN,EAAQO,KAAK,SAASF,UAAU,kBAA3D,oBAChB,oBAAId,MAAM,MAAV,SAAgB,wBAAQJ,GAAG,aAAamB,QAASN,EAAQO,KAAK,SAASF,UAAU,kBAAjE,wBAChB,oBAAId,MAAM,MAAV,SAAgB,wBAAQJ,GAAG,QAAQmB,QAASN,EAAQO,KAAK,SAASF,UAAU,kBAA5D,0BAGxB,gCACI,cAAC,EAAD,CAAMpB,MAAOA,EAAOS,KAAMA,U,OCZ3Bc,MARf,YAAyC,IAArBC,EAAoB,EAApBA,kBAChB,OACI,+BACI,uBAAOJ,UAAU,sDAAsDK,SAAU,SAACT,GAAD,OAAWQ,EAAkBR,SCiC3GU,MA/Bf,WAAgB,IAAD,EACqBb,mBAASc,GAD9B,mBACNC,EADM,KACKC,EADL,OAEehB,mBAAS,IAFxB,mBAENiB,EAFM,KAEEC,EAFF,KAqBb,OAjBAC,qBAAU,WACR,GAAKF,EAAL,CAKA,IAAMG,EAAWL,EAAUM,QAAO,SAAAC,GAAQ,OAAIA,EAAShC,KAAKiC,SAASN,MAErED,EAAaI,QANXJ,EAAaF,KAQd,CAACG,IAQF,sBAAKV,UAAU,YAAf,UACE,oDACA,wJACF,cAAC,EAAD,CAAWiB,QAASP,EAAQN,kBARJ,SAACR,GACzBe,EAAUf,EAAMC,OAAOqB,UAQvB,cAAC,EAAD,CAAOtC,MAAO4B,QCrBHW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5a6873ea.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Row({users}) {\n    return <>\n        {\n            users.map(({id, name, occupation, email }) => (\n                <tr key={id}>\n                    <th scope=\"row\">{id}</th>\n                    <td>{name}</td>\n                    <td>{occupation}</td>\n                    <td>{email}</td>\n                </tr>\n            ))\n        }\n    </>\n}\n\nexport default Row;","import React from \"react\";\nimport Row from \"./Row\";\n\nfunction Sort(props) {\n    const {users, sort } = props;\n    props.users.sort((a, b) => (a[sort] > b[sort]) ? 1 : -1)\n    return(\n        <Row users={users} />\n    )\n}\n\nexport default Sort;","import React, {useState } from \"react\";\nimport Sort from \"./Sort\";\n\nfunction Table({users}) {\n    const [sort, setSort] = useState(\"id\");\n\n    const sortBy = event => {\n        setSort(event.target.id);\n    }\n    console.log(\"Table users: \" + users);\n\n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\"><button id=\"id\" onClick={sortBy} type=\"button\" className=\"btn btn-primary\">ID</button></th>\n                    <th scope=\"col\"><button id=\"name\" onClick={sortBy} type=\"button\" className=\"btn btn-primary\">Name</button></th>\n                    <th scope=\"col\"><button id=\"occupation\" onClick={sortBy} type=\"button\" className=\"btn btn-primary\">Position</button></th>\n                    <th scope=\"col\"><button id=\"email\" onClick={sortBy} type=\"button\" className=\"btn btn-primary\">Email</button></th>\n                </tr>\n            </thead>\n            <tbody>\n                <Sort users={users} sort={sort}/>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table;","import React from \"react\";\n\nfunction SearchBar({handleInputChange}) {\n    return (\n        <form>\n            <input className=\"mdb-select md-form colorful-select dropdown-primary\" onChange={(event) => handleInputChange(event)} />\n        </form>\n    )\n};\n\nexport default SearchBar;","// import logo from './logo.svg';\nimport './App.css';\nimport Table from \"./components/Table\"\nimport employeeDirectory from \"../src/employees.json\"\nimport SearchBar from \"./components/SearchBar\";\nimport React, {useEffect, useState} from \"react\";\n\nfunction App() {\n  const [employees, setEmployees] = useState(employeeDirectory)\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    if (!search) {\n      setEmployees(employeeDirectory)\n      return;\n    }\n\n    const filtered = employees.filter(employee => employee.name.includes(search));\n\n    setEmployees(filtered);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n\n  const handleInputChange = (event) => {\n    setSearch(event.target.value);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Employee Directory</h1>\n      <p>Filter by employee name using the search bar below or sort by name, position, or email with the column heading buttons.</p>\n    <SearchBar results={search} handleInputChange={handleInputChange}/>\n    <Table users={employees}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}